<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="/stylesheets/style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Room</title>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/interactjs@1.3.3/dist/interact.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var roomName = document.getElementById('Welcome').getAttribute("name")
            var socket = io.connect();

            function joinRoom() {
                socket.emit("join room", roomName)
            }

            socket.on('user_joined', function (data) {
                //Display 'data' received on the 'client' browser console:
                console.log('The server says: ' + data.response);
            });

            joinRoom()

            interact('.draggable')
                .draggable({
                    inertia: true,
                    onmove: dragMoveListener,
                    onend: function (event) {
                        // set target so we can measure the coordinates of it's final x/y coordinates    
                        var target = event.target;
                        // keep the dragged position in the data-x/data-y attributes 
                        x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
                            y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;
                    }
                });
            interact('.dropzone').dropzone({
                ondragenter: function (event) {
                    var draggableElement = event.relatedTarget,
                        dropzoneElement = event.target;
                    // add a class to know it's in the target
                    draggableElement.classList.add('in-target');
                },
                ondragleave: function (event) {
                    // remove the "in-target" class 
                    event.relatedTarget.classList.remove('in-target');
                },
            });
            function dragMoveListener(event) {
                var target = event.target
                var draggableElement = event.relatedTarget
                id = event.currentTarget.id
                // keep the dragged position in the data-x/data-y attributes 
                x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
                    y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;
                // translate the element 
                target.style.webkitTransform =
                    target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';
                // update the posiion attributes 
                target.setAttribute('data-x', x);
                target.setAttribute('data-y', y);
                socket.emit('tile_clicked', { room: roomName, x: x, y: y, id: id })
            }
            socket.on('server_response', function (data) {
                console.log("x coordinate: " + data.response.x)
                console.log("y coordinate: " + data.response.y)
                var d = document.getElementById(data.response.id)
                d.style.position = "absolute";
                d.style.left = data.response.x + 'px';
                d.style.top = data.response.y + 'px';
                //data.response.target.setAttribute('data-x', data.response.x);
                //data.response.target.setAttribute('data-y', data.response.y);
            })
        });
    </script>
</head>

<body>
    <h1 id="Welcome" name='<%=id %>'>Welcome</h1>

    <div class="draggable ib" id="first">
        <p class="tile red">Tile 1</p>
    </div>
    <div class="draggable ib" id="second">
        <p class="tile purple">Tile 2</p>
    </div>
    <div class="draggable ib" id="third">
        <p class="tile blue">Tile 3</p>
    </div>
    <div class="dropzone" id="target">Target</div>
    <a href="/">
        <button class="reset">Reset</button>
    </a>

</body>